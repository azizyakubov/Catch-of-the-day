{"ast":null,"code":"import _objectSpread from \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      //In order to update state, you need to use React setState API\n      //1.Take a copy of existing state\n      var fishes = _objectSpread({}, _this.state.fishes); //2.Add our new fish to the fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; //3.Set the new fishes object to state, override\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // Take a copy of state\n      var order = _objectSpread({}, _this.state.order); // Either add to the order or update the order\n\n\n      order[key] = order[key] + 1 || 1; // call setState to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      this.ref = base.synState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: \"fishes\"\n      });\n    } //any custom fuction that updates state needs to live in the same component that the state lives in, ie App.js\n    //and can be passed on as props as shown below inside <inventory />\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return (// for react to be fast, it needs to be able to iterate over all the elements and find that specific component Fast.\n          // To do so, it needs a unique identifier \"key={}\" for the thing it renders, which is usually an id from a database, but in our case can be set to anything, which is the key of the object Fishes.\n          // However, the key prop is not displayed in dev tools, so you need to add another attribute, something like index={} if you want to pull the value of the key out\n          React.createElement(Fish, {\n            key: key,\n            index: key,\n            details: _this2.state.fishes[key],\n            addToOrder: _this2.addToOrder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          })\n        );\n      }))), React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/aziz/Documents/Practice code/React/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js"],"names":["React","Header","Inventory","Order","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","loadSampleFishes","addToOrder","key","params","props","match","ref","synState","storeId","context","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    this.ref = base.synState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n  //any custom fuction that updates state needs to live in the same component that the state lives in, ie App.js\n  //and can be passed on as props as shown below inside <inventory />\n  addFish = fish => {\n    //In order to update state, you need to use React setState API\n    //1.Take a copy of existing state\n    const fishes = { ...this.state.fishes };\n    //2.Add our new fish to the fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    //3.Set the new fishes object to state, override\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // Take a copy of state\n    const order = { ...this.state.order };\n    // Either add to the order or update the order\n    order[key] = order[key] + 1 || 1;\n    // call setState to update our state object\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              // for react to be fast, it needs to be able to iterate over all the elements and find that specific component Fast.\n              // To do so, it needs a unique identifier \"key={}\" for the thing it renders, which is usually an id from a database, but in our case can be set to anything, which is the key of the object Fishes.\n              // However, the key prop is not displayed in dev tools, so you need to add another attribute, something like index={} if you want to pull the value of the key out\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} />\n        <Inventory\n          addFish={this.addFish}\n          loadSampleFishes={this.loadSampleFishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}